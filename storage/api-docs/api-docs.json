{
    "openapi": "3.0.0",
    "info": {
        "title": "My API",
        "description": "API documentation",
        "contact": {
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Local API Server"
        }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User registration",
                "description": "Register new user and return JWT token",
                "operationId": "authRegister",
                "requestBody": {
                    "description": "User registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "confirmPassword"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 30,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "maxLength": 12,
                                        "minLength": 6,
                                        "example": "password123"
                                    },
                                    "confirmPassword": {
                                        "description": "Must match password field",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Регистрация прошла успешно"
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 3600
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "format": "email",
                                                            "example": "user@example.com"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ошибка валидации"
                                        },
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "The email field is required."
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Неизвестная ошибка"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Internal server error"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate user and return JWT token",
                "operationId": "authLogin",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "vlad1@vlad.ru"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 6,
                                        "example": "vlad1@vlad.ru"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful authentication",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Авторизация прошла успешно"
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "format": "email",
                                                            "example": "user@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Неверные учетные данные"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ошибка валидации"
                                        },
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "The email field is required."
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Invalidates the current access token",
                "operationId": "authLogout",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Token not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No active token found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Logout failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/getSession": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user data",
                "description": "Returns authenticated user information",
                "operationId": "getUserSession",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "user@example.com"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to get user data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/getBanners": {
            "get": {
                "tags": [
                    "Banners"
                ],
                "summary": "Получение списка баннеров",
                "description": "Возвращает список баннеров для фронтенда",
                "operationId": "getBanners",
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Пример фильтра для баннеров",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список баннеров успешно получен",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Успешно"
                                        },
                                        "data": {
                                            "description": "Баннеры сгруппированные по коду",
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Баннер 1"
                                                        },
                                                        "image_url": {
                                                            "type": "string",
                                                            "example": "https://example.com/banner1.jpg"
                                                        },
                                                        "link": {
                                                            "type": "string",
                                                            "example": "https://example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "errors": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ошибка"
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Some error message"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Неизвестная ошибка",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Неизвестная ошибка"
                                        },
                                        "data": {
                                            "type": "null"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Some error message"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/recipes/create-recipe": {
            "post": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Создание рецепта",
                "description": "Создает новый рецепт. Требуется авторизация по токену (Bearer).",
                "operationId": "3a369af67c8f83417a9529b7e2898fd7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "servings",
                                    "ingredients",
                                    "steps"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Борщ"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Традиционный украинский борщ"
                                    },
                                    "servings": {
                                        "description": "Количество порций",
                                        "type": "integer",
                                        "example": 4
                                    },
                                    "cooking_time": {
                                        "description": "Время приготовления в минутах",
                                        "type": "integer",
                                        "example": 60,
                                        "nullable": true
                                    },
                                    "is_published": {
                                        "description": "Опубликован ли рецепт",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "ingredients": {
                                        "description": "Список ингредиентов",
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id",
                                                "weight_grams"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "ID ингредиента",
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "weight_grams": {
                                                    "description": "Вес в граммах",
                                                    "type": "number",
                                                    "example": 200
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "steps": {
                                        "description": "Этапы приготовления",
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "description",
                                                "step_number"
                                            ],
                                            "properties": {
                                                "description": {
                                                    "type": "string",
                                                    "example": "Нарезать овощи"
                                                },
                                                "step_number": {
                                                    "description": "Порядковый номер шага",
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "tags": {
                                        "description": "Теги рецепта",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Успешный ответ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Успешно"
                                        },
                                        "data": {
                                            "description": "Созданный рецепт",
                                            "type": "object"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь не найден (не авторизован)"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ошибка валидации"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "title": [
                                                    "Название рецепта обязательно."
                                                ],
                                                "ingredients": [
                                                    "Нужно указать хотя бы один ингредиент."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Неизвестная ошибка"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "SQLSTATE[HY000]: General error"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/recipes/get-recipe-list": {
            "get": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Получение списка рецептов",
                "description": "Возвращает список рецептов с возможностью фильтрации и пагинации. Требуется авторизация.",
                "operationId": "fb12b3f04717a0c5c2a1591a226d7b93",
                "parameters": [
                    {
                        "name": "is_published",
                        "in": "query",
                        "description": "Фильтр по опубликованным/неопубликованным рецептам",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "name": "author_id",
                        "in": "query",
                        "description": "Фильтр по автору (ID пользователя)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "tag_ids[]",
                        "in": "query",
                        "description": "Фильтр по тегам (массив ID тегов)",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "example": 3
                            }
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Поиск по названию/описанию",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "борщ"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Количество элементов на странице (по умолчанию 15, макс. 100)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Успешно"
                                        },
                                        "data": {
                                            "description": "Список рецептов с пагинацией",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 101
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Борщ"
                                                            },
                                                            "preview_image": {
                                                                "type": "string",
                                                                "example": "https://site.com/storage/recipes/101.jpg"
                                                            },
                                                            "servings": {
                                                                "type": "integer",
                                                                "example": 4
                                                            },
                                                            "cooking_time": {
                                                                "type": "integer",
                                                                "example": 60
                                                            },
                                                            "is_published": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "author_id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "tags": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "example": "Супы"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 125
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 9
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 15
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь не найден (не авторизован)"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Неизвестная ошибка"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "SQLSTATE[HY000]: General error"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/recipes/get-recipe-by-id/{id}": {
            "get": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Получение рецепта по ID",
                "description": "Возвращает рецепт по его идентификатору. Требуется авторизация.",
                "operationId": "2befc5d65fc7f93f1bb9c376e4cfe65a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID рецепта",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Успешно"
                                        },
                                        "data": {
                                            "description": "Объект рецепта",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 101
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Борщ"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Традиционный украинский борщ"
                                                },
                                                "preview_image": {
                                                    "type": "string",
                                                    "example": "https://site.com/storage/recipes/101.jpg"
                                                },
                                                "servings": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "cooking_time": {
                                                    "type": "integer",
                                                    "example": 60
                                                },
                                                "is_published": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "author_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "ingredients": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 12
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Картофель"
                                                            },
                                                            "weight_grams": {
                                                                "type": "number",
                                                                "example": 200
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "steps": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "step_number": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "example": "Нарезать овощи"
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "example": "https://site.com/storage/steps/1.jpg",
                                                                "nullable": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "tags": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Супы"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь не найден (не авторизован)"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Рецепт не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Рецепт не найден"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Неизвестная ошибка"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "SQLSTATE[HY000]: General error"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/recipes/get-recipe-by-user-id/{id}": {
            "get": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Получение списка рецептов пользователя",
                "description": "Возвращает список рецептов указанного пользователя с возможностью фильтрации и пагинации. Требуется авторизация.",
                "operationId": "6cadc940c68ed9f38bdfd71376aa4465",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID пользователя, чьи рецепты нужно получить",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 7
                        }
                    },
                    {
                        "name": "is_published",
                        "in": "query",
                        "description": "Фильтр по опубликованным/неопубликованным рецептам",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "name": "tag_ids[]",
                        "in": "query",
                        "description": "Фильтр по тегам (массив ID тегов)",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "example": 3
                            }
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Поиск по названию/описанию",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "паста"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Количество элементов на странице (по умолчанию 15, макс. 100)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Успешно"
                                        },
                                        "data": {
                                            "description": "Список рецептов пользователя с пагинацией",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 101
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Паста карбонара"
                                                            },
                                                            "preview_image": {
                                                                "type": "string",
                                                                "example": "https://site.com/storage/recipes/101.jpg"
                                                            },
                                                            "servings": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "cooking_time": {
                                                                "type": "integer",
                                                                "example": 25
                                                            },
                                                            "is_published": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "author_id": {
                                                                "type": "integer",
                                                                "example": 7
                                                            },
                                                            "tags": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "example": "Итальянская кухня"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 42
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "from": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "to": {
                                                    "type": "integer",
                                                    "example": 15
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь не найден (не авторизован)"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Неизвестная ошибка"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "SQLSTATE[HY000]: General error"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/recipes/delete-recipe/{id}": {
            "delete": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Удаление рецепта",
                "description": "Удаляет рецепт по ID. Требуется авторизация.",
                "operationId": "da254759106c07a88200dc11fac2eeaf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID рецепта для удаления",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 101
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Рецепт успешно удалён",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Успешно"
                                        },
                                        "data": {
                                            "description": "Удалённый рецепт",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 101
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Борщ"
                                                },
                                                "is_deleted": {
                                                    "description": "Флаг удаления (может возвращаться)",
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь не найден (не авторизован)"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Рецепт не найден",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Рецепт не найден"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Неизвестная ошибка"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "SQLSTATE[HY000]: General error"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/recipes/update-recipe": {
            "post": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Обновление рецепта",
                "description": "Создает новый рецепт. Требуется авторизация по токену (Bearer).",
                "operationId": "86f4d0c3df6365279e3b277a4589fa0d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "servings",
                                    "ingredients",
                                    "steps"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "ID рецепта (для обновления)",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "title": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Борщ"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Традиционный украинский борщ"
                                    },
                                    "servings": {
                                        "description": "Количество порций",
                                        "type": "integer",
                                        "example": 4
                                    },
                                    "cooking_time": {
                                        "description": "Время приготовления в минутах",
                                        "type": "integer",
                                        "example": 60,
                                        "nullable": true
                                    },
                                    "is_published": {
                                        "description": "Опубликован ли рецепт",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "ingredients": {
                                        "description": "Список ингредиентов",
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "id",
                                                "weight_grams"
                                            ],
                                            "properties": {
                                                "id": {
                                                    "description": "ID ингредиента",
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "weight_grams": {
                                                    "description": "Вес в граммах",
                                                    "type": "number",
                                                    "example": 200
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "steps": {
                                        "description": "Этапы приготовления",
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "description",
                                                "step_number"
                                            ],
                                            "properties": {
                                                "description": {
                                                    "type": "string",
                                                    "example": "Нарезать овощи"
                                                },
                                                "step_number": {
                                                    "description": "Порядковый номер шага",
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "tags": {
                                        "description": "Теги рецепта",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Успешный ответ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Успешно"
                                        },
                                        "data": {
                                            "description": "Созданный рецепт",
                                            "type": "object"
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 401
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Пользователь не найден (не авторизован)"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ошибка валидации"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "title": [
                                                    "Название рецепта обязательно."
                                                ],
                                                "ingredients": [
                                                    "Нужно указать хотя бы один ингредиент."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Неизвестная ошибка"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            },
                                            "example": [
                                                "SQLSTATE[HY000]: General error"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API Endpoints for Authentication"
        },
        {
            "name": "Banners",
            "description": "API для работы с баннерами"
        },
        {
            "name": "Recipes",
            "description": "Recipes"
        }
    ]
}